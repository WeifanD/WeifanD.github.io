arrange(desc(nnasQv)) %>%
filter(nnasQv>0.1) %>%
ggplot(aes(x = reorder(ID, nnasQv), nnasQv))+
geom_point(aes(colour = '#363636'), show.legend = FALSE)+
xlab('ID')+
coord_flip()+
theme_classic()
p3 <- sales %>%
group_by(Prod) %>%
summarise(nnasQs = round(sum(is.na(Quant))/n(), 2)) %>%
arrange(desc(nnasQs)) %>%
filter(nnasQs>0.5) %>%
ggplot(aes(x = reorder(Prod, nnasQs), nnasQs))+
geom_point(aes(colour = ifelse(nnasQs>0.9, '#363636','#ffffff')), show.legend = FALSE)+
xlab('Prod')+
coord_flip()+
theme_classic()
p4 <- sales %>%
group_by(Prod) %>%
summarise(nnasQv = round(sum(is.na(Val))/n(), 2)) %>%
arrange(desc(nnasQv)) %>%
filter(nnasQv>0.1) %>%
ggplot(aes(x = reorder(Prod, nnasQv), nnasQv))+
geom_point(aes(colour = '#ffffff'), show.legend = FALSE)+
xlab('Prod')+
coord_flip()+
theme_classic()
layout <- matrix(c(1,2,3,4),1,4,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
p1 <- sales %>%
group_by(ID) %>%
summarise(nnasQs = round(sum(is.na(Quant))/n(), 2)) %>%
arrange(desc(nnasQs)) %>%
filter(nnasQs>0.5) %>%
ggplot(aes(x = reorder(ID, nnasQs), nnasQs))+
geom_point(aes(colour = ifelse(nnasQs>0.9, '#363636','#ffffff')), show.legend = FALSE)+
xlab('ID')+
coord_flip()+
theme_classic()
p2 <- sales %>%
group_by(ID) %>%
summarise(nnasQv = round(sum(is.na(Val))/n(), 2)) %>%
arrange(desc(nnasQv)) %>%
filter(nnasQv>0.1) %>%
ggplot(aes(x = reorder(ID, nnasQv), nnasQv))+
geom_point(colour = '#363636')+
xlab('ID')+
coord_flip()+
theme_classic()
p3 <- sales %>%
group_by(Prod) %>%
summarise(nnasQs = round(sum(is.na(Quant))/n(), 2)) %>%
arrange(desc(nnasQs)) %>%
filter(nnasQs>0.5) %>%
ggplot(aes(x = reorder(Prod, nnasQs), nnasQs))+
geom_point(aes(colour = ifelse(nnasQs>0.9, '#363636','#ffffff')), show.legend = FALSE)+
xlab('Prod')+
coord_flip()+
theme_classic()
p4 <- sales %>%
group_by(Prod) %>%
summarise(nnasQv = round(sum(is.na(Val))/n(), 2)) %>%
arrange(desc(nnasQv)) %>%
filter(nnasQv>0.1) %>%
ggplot(aes(x = reorder(Prod, nnasQv), nnasQv))+
geom_point()+
xlab('Prod')+
coord_flip()+
theme_classic()
layout <- matrix(c(1,2,3,4),1,4,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
p1 <- sales %>%
group_by(ID) %>%
summarise(nnasQs = round(sum(is.na(Quant))/n(), 2)) %>%
arrange(desc(nnasQs)) %>%
filter(nnasQs>0.5) %>%
ggplot(aes(x = reorder(ID, nnasQs), nnasQs))+
geom_point(aes(colour = ifelse(nnasQs>0.99, '#363636','#ffffff')), show.legend = FALSE)+
xlab('ID')+
coord_flip()+
theme_classic()
p2 <- sales %>%
group_by(ID) %>%
summarise(nnasQv = round(sum(is.na(Val))/n(), 2)) %>%
arrange(desc(nnasQv)) %>%
filter(nnasQv>0.1) %>%
ggplot(aes(x = reorder(ID, nnasQv), nnasQv))+
geom_point(colour = '#363636')+
xlab('ID')+
coord_flip()+
theme_classic()
p3 <- sales %>%
group_by(Prod) %>%
summarise(nnasQs = round(sum(is.na(Quant))/n(), 2)) %>%
arrange(desc(nnasQs)) %>%
filter(nnasQs>0.5) %>%
ggplot(aes(x = reorder(Prod, nnasQs), nnasQs))+
geom_point(aes(colour = ifelse(nnasQs>0.99, '#363636','#ffffff')), show.legend = FALSE)+
xlab('Prod')+
coord_flip()+
theme_classic()
p4 <- sales %>%
group_by(Prod) %>%
summarise(nnasQv = round(sum(is.na(Val))/n(), 2)) %>%
arrange(desc(nnasQv)) %>%
filter(nnasQv>0.1) %>%
ggplot(aes(x = reorder(Prod, nnasQv), nnasQv))+
geom_point()+
xlab('Prod')+
coord_flip()+
theme_classic()
layout <- matrix(c(1,2,3,4),1,4,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
sales <- sales[!sales$Prod %in% c('p2442','p2443'),]
nlevels(sales$Prod)
View(sales)
summary(sales)
load(sales,file='salesClean.Rdata')
load(file='../_rmd/salesClean.Rdata')
View(sales)
table(sales$Prod)
as.data.frame(table(sales$Prod))
as.data.frame(table(sales$Prod)) %>% arrange(Freq)
as.data.frame(table(sales$Prod)) %>% arrange(Freq) %>% tail(10)
as.data.frame(table(sales$Prod)) %>% arrange(Freq) %>% head(10)
summary(sales)
sales %>%
filter(!Insp == 'fraud') %>%
nrows()
sales %>%
filter(!Insp == 'fraud') %>%
nrow()
sales %>%
filter(!Insp == 'fraud') %>%
group_by(Prod) %>%
summarise(medP = boxplot.stats(Uprice)[3],
iqrP = boxplot.stats(Uprice)[4]-boxplot.stats(Uprice)[2])
notF <- which(Insp != 'fraud')
notF <- which(sales$Insp != 'fraud')
ms <- tapply(Uprice[notF],list(Prod=Prod[notF]),function(x) {
bp <- boxplot.stats(x)$stats
c(median=bp[3],iqr=bp[4]-bp[2])
})
attach(sales)
notF <- which(Insp != 'fraud')
ms <- tapply(Uprice[notF],list(Prod=Prod[notF]),function(x) {
bp <- boxplot.stats(x)$stats
c(median=bp[3],iqr=bp[4]-bp[2])
})
ms <- matrix(unlist(ms),
length(ms),2,
byrow=T,dimnames=list(names(ms),c('median','iqr')))
head(ms)
par(mfrow=c(1,2))
plot(ms[,1],ms[,2],xlab='Median',ylab='IQR',main='')
attach(sales)
notF <- which(Insp != 'fraud')
ms <- tapply(Uprice[notF],list(Prod=Prod[notF]),function(x) {
bp <- boxplot.stats(x)$stats
c(median=bp[3],iqr=bp[4]-bp[2])
})
ms <- matrix(unlist(ms),
length(ms),2,
byrow=T,dimnames=list(names(ms),c('median','iqr')))
head(ms)
par(mfrow=c(1,2))
plot(ms[,1],ms[,2],xlab='Median',ylab='IQR',main='')
plot(ms[,1],ms[,2],xlab='Median',ylab='IQR',main='',col='grey',log="xy")
smalls <- which(table(Prod) < 20)
points(log(ms[smalls,1]),log(ms[smalls,2]),pch='+')
dms <- scale(ms)
smalls <- which(table(Prod) < 20)
prods <- tapply(sales$Uprice,sales$Prod,list)
similar <- matrix(NA,length(smalls),7,dimnames=list(names(smalls),c('Simil','ks.stat','ks.p','medP','iqrP','medS','iqrS')))
for(i in seq(along=smalls)) {
d <- scale(dms,dms[smalls[i],],FALSE)
d <- sqrt(drop(d^2 %*% rep(1,ncol(d))))
stat <- ks.test(prods[[smalls[i]]],prods[[order(d)[2]]])
similar[i,] <- c(order(d)[2],stat$statistic,stat$p.value,ms[smalls[i],],ms[order(d)[2],])
}
load(file='../_rmd/salesClean.Rdata')
attach(sales)
notF <- which(Insp != 'fraud')
ms <- tapply(Uprice[notF],list(Prod=Prod[notF]),function(x) {
bp <- boxplot.stats(x)$stats
c(median=bp[3],iqr=bp[4]-bp[2])
})
ms <- matrix(unlist(ms),
length(ms),2,
byrow=T,dimnames=list(names(ms),c('median','iqr')))
head(ms)
par(mfrow=c(1,2))
plot(ms[,1],ms[,2],xlab='Median',ylab='IQR',main='')
plot(ms[,1],ms[,2],xlab='Median',ylab='IQR',main='',col='grey',log="xy")
smalls <- which(table(Prod) < 20)
points(log(ms[smalls,1]),log(ms[smalls,2]),pch='+')
dms <- scale(ms)
smalls <- which(table(Prod) < 20)
prods <- tapply(sales$Uprice,sales$Prod,list)
similar <- matrix(NA,length(smalls),7,dimnames=list(names(smalls),c('Simil','ks.stat','ks.p','medP','iqrP','medS','iqrS')))
for(i in seq(along=smalls)) {
d <- scale(dms,dms[smalls[i],],FALSE)
d <- sqrt(drop(d^2 %*% rep(1,ncol(d))))
stat <- ks.test(prods[[smalls[i]]],prods[[order(d)[2]]])
similar[i,] <- c(order(d)[2],stat$statistic,stat$p.value,ms[smalls[i],],ms[order(d)[2],])
}
i <- 1
d <- scale(dms,dms[smalls[i],],FALSE)
d <- sqrt(drop(d^2 %*% rep(1,ncol(d))))
stat <- ks.test(prods[[smalls[i]]],prods[[order(d)[2]]])
prods[[smalls[i]]]
smalls
smalls <- which(table(Prod) < 20)
smalls
sales %>%
filter(Insp != 'fraud') %>%
group_by(Prod) %>%
summarise(bp = boxplot.stats(x)$stats)
sales %>%
filter(Insp != 'fraud') %>%
group_by(Prod) %>%
summarise(bp = boxplot.stats(.)$stats)
library("purrr", lib.loc="~/R/win-library/3.4")
sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod) %>%
map(bp = boxplot.stats(.)$stats)
sales %>%
filter(Insp != 'fraud') %>%
group_by(Prod) %>%
summarise(medP = boxplot.stats(.)$stats[3])
sales %>%
filter(Insp != 'fraud') %>%
split(.$cyl)
sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod)
sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod) %>%
mutate(mod = boxplot.stats(.)$stats)
temp <- sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod) %>%
mutate(mod = map(., boxplot.stats(.)$stats))
temp <- sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod) %>%
mutate(mod = map(., ~boxplot.stats(.)$stats))
temp <- sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod) %>%
map(., ~boxplot.stats(.)$stats)
temp <- sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod) %>%
map(~boxplot.stats(.)$stats)
temp <- sales %>%
filter(Insp != 'fraud') %>%
split(.$Prod) %>%
map(boxplot.stats(.)$stats)
boxplot.stats(c(2.1,2.3,2.1))
boxplot.stats(c(2.1,2.3,2.1))$stats
prods[[smalls[i]]]
order(d)[2]
order(d)
boot <- partition(mtcars, 100, c(test = 0.8, training = 0.2))
boot
library("dplyr", lib.loc="~/R/win-library/3.4")
boot <- partition(mtcars, 100, c(test = 0.8, training = 0.2))
boot <- mtcars %>%
split(.$cyl)
boot
boot <- mtcars %>%
split(.$cyl) %>% mutate(
# Fit the models
models = map( ~ lm(mpg ~ wt, data = mtcars))
)
boot <- mtcars %>%
split(.$cyl) %>% mutate(
# Fit the models
models = map_tbl( ~ lm(mpg ~ wt, data = mtcars))
)
boot <- mtcars %>%
split(.$cyl) %>% mutate(
# Fit the models
models = map_tbl( ~ lm(mpg ~ wt, data = mtcars))
)
boot <- mtcars %>%
split(.$cyl) %>% mutate(
# Fit the models
models = map_dbl( ~ lm(mpg ~ wt, data = mtcars))
)
boot <- mtcars %>%
split(.$cyl) %>% mutate(
# Fit the models
models = map_dbl( ~ lm(mpg ~ wt, data = mtcars))
)
mtcars %>%
split(.$cyl) %>%
map(~lm(mpg ~ wt, data = .))
mtcars %>%
split(.$cyl) %>%
map(~boxplot.stats(mpg)$stats)
mtcars %>%
split(.$cyl) %>%
map(~boxplot.stats(.$mpg)$stats)
mtcars %>%
split(.$cyl) %>%mutate(
medP = map(~boxplot.stats(.$mpg)$stats[3])
)
mtcars %>%
split(.$cyl) %>% mutate(
medP = map(~boxplot.stats(.$mpg)$stats[3])
)
mtcars %>%
split(.$cyl) %>% mutate(
medP = map_tbl(~boxplot.stats(.$mpg)$stats[3])
)
mtcars %>%
split(.$cyl) %>% mutate(
medP = map_dbl(~boxplot.stats(.$mpg)$stats[3])
)
mtcars %>%
split(.$cyl) %>%
map(~boxplot.stats(.$mpg)$stats)
mtcars %>%
split(.$cyl) %>%
map(~boxplot.stats(.$mpg)$stats[3])
mtcars %>%
split(.$cyl) %>%
map_int(~boxplot.stats(.$mpg)$stats[3])
mtcars %>%
split(.$cyl) %>%
map(~boxplot.stats(.$mpg)$stats[3])
mtcars %>%
split(.$cyl) %>%
map_dbl(~boxplot.stats(.$mpg)$stats[3])
cv <- mtcars %>%
partition(100, c(training = 0.8, test = 0.2)) %>%
mutate(
# Fit the model
model = map(training, ~ lm(mpg ~ wt, data = .)),
# Make predictions on test data
pred = map2(model, test, predict),
# Calculate mean squared difference
diff = map2(pred, test %>% map("mpg"), msd) %>% flatten()
)
cv <- mtcars %>%
split(.$cyl) %>%
mutate(
# Fit the model
model = map(training, ~ lm(mpg ~ wt, data = .)),
# Make predictions on test data
pred = map2(model, test, predict),
# Calculate mean squared difference
diff = map2(pred, test %>% map("mpg"), msd) %>% flatten()
)
random_group <- function(n, probs) {
probs <- probs / sum(probs)
g <- findInterval(seq(0, 1, length = n), c(0, cumsum(probs)),
rightmost.closed = TRUE)
names(probs)[sample(g)]
}
partition <- function(df, n, probs) {
n %>%
replicate(split(df, random_group(nrow(df), probs)), FALSE) %>%
zip_n() %>%
as_data_frame()
}
msd <- function(x, y) sqrt(mean((x - y) ^ 2))
mtcars %>%
partition(100, c(training = 0.8, test = 0.2))
library("purrr", lib.loc="~/R/win-library/3.4")
mtcars %>%
partition(100, c(training = 0.8, test = 0.2))
library("dplyr", lib.loc="~/R/win-library/3.4")
mtcars %>%
partition(100, c(training = 0.8, test = 0.2))
library("purrr", lib.loc="~/R/win-library/3.4")
cv <- mtcars %>%
mutate(
# Fit the model
model = map(training, ~ lm(mpg ~ wt, data = .)),
# Make predictions on test data
pred = map2(model, test, predict),
# Calculate mean squared difference
diff = map2(pred, test %>% map("mpg"), msd) %>% flatten()
)
cv <- mtcars %>%
mutate(
# Fit the model
model = map(~ lm(mpg ~ wt, data = .)),
# Make predictions on test data
pred = map2(model, test, predict),
# Calculate mean squared difference
diff = map2(pred, test %>% map("mpg"), msd) %>% flatten()
)
partition <- function(df, n, probs) {
n %>%
replicate(split(df, random_group(nrow(df), probs)), FALSE) %>%
as_data_frame()
}
msd <- function(x, y) sqrt(mean((x - y) ^ 2))
cv <- mtcars %>%
mutate(
# Fit the model
model = map(~ lm(mpg ~ wt, data = .)),
# Make predictions on test data
pred = map2(model, test, predict),
# Calculate mean squared difference
diff = map2(pred, test %>% map("mpg"), msd) %>% flatten()
)
mtcars %>%
split(.$cyl) %>%
imap(mutate(medP= ~boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
split(.$cyl) %>%
imap(~mutate(medP= ~boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
split(.$cyl) %>%
imap(~mutate(medP= ~boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
split(.$cyl) %>%
imap(~mutate(., medP= ~boxplot.stats(.$mpg)$stats[3]))
sample(10)
imap_chr(sample(10), ~ paste0(.y, ": ", .x))
sample(10)
library(tidyverse)
df <- data.frame(Group = c(rep("A", 7), rep("B", 7), rep("C", 7)),
Time = c(rep(c(1:7), 3)),
Result = c(100, 96.9, 85.1, 62.0, 30.7, 15.2, 9.6,
10.2, 14.8, 32.26, 45.85, 56.25, 70.1, 100,
100, 55.61, 3.26, -4.77, -7.21, -3.2, -5.6))
View(df)
df_p <-
df %>%
group_by(Group) %>%
nest
View(df_p)
df_p$starta = c(-3, 4,-3)
df_p$startb = c(85, 85, 85)
df_p$startc = c(4, 4, 4)
df_p$startd = c(10,10,10)
df_p %>%
mutate(model2 = map(data, ~nls(Result ~ a+(b-a)/(1+(Time/c)^d), data = ., start = c(a = starta, b = startb, c = startc, d = startd)))
)
mtcars %>%
group_by(cyl) %>%
nest() %>%
mutate(c = c(1,2,3))
mtcars %>%
group_by(cyl) %>%
nest() %>%
mutate(medP = map(boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
group_by(cyl) %>%
nest() %>%
mutate(medP = map(., boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
group_by(cyl) %>%
nest() %>%
mutate(medP = map(., boxplot.stats(.$mpg)$stats))
mtcars %>%
group_by(cyl) %>%
nest() %>%
mutate(medP = map(., ~boxplot.stats(.$mpg)$stats))
mtcars %>%
group_by(cyl) %>%
nest() %>%
mutate(medP = map(~boxplot.stats(.$mpg)$stats))
mtcars %>%
group_by(cyl) %>%
nest() %>%
mutate(medP = map(., ~boxplot.stats(.$mpg)$stats))
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map(., ~boxplot.stats(.$mpg)$stats))
mtcars %>%
group_by(cyl) %>%
nest()
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map(data, ~boxplot.stats(.$mpg)$stats))
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map(data, ~boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map_int(data, ~boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map(data, ~boxplot.stats(.$mpg)$stats[3]))
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map(data, ~boxplot.stats(.$mpg)$stats[3])) %>%
unnest()
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map(data, ~boxplot.stats(.$mpg)$stats[3])) %>%
unnest()
mtcars %>%
group_by(cyl) %>%
nest() %>%
dplyr::mutate(medP = map(data, ~boxplot.stats(.$mpg)$stats[3]))
